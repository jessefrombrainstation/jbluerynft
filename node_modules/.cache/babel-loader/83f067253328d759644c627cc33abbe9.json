{"ast":null,"code":"var _jsxFileName = \"/Users/henosisholdingsllc/Desktop/jbluerynft/src/components/Lounge/Lounge.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../Lounge/Lounge.scss\";\nimport Connect from \"../../assets/images/connect-wallet.png\";\nimport Disconnect from \"../../assets/images/logout-wallet.png\";\nimport verification from \"../../assets/images/verify-wallet.png\";\nimport Buy from \"../../assets/images/buy-wallet.png\";\nimport Toke from \"../../assets/images/coin-verified-transparent.gif\";\nimport PinkConnect from \"../../assets/images/pink-connect-wallet.gif\";\nimport PinkVerify from \"../../assets/images/pink-verify-wallet.gif\";\nimport { ReactComponent as Meta } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/images/metamask.svg\";\nimport { useMoralis, useNFTBalances } from \"react-moralis\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Lounge() {\n  _s();\n\n  const {\n    logout,\n    authenticate,\n    isAuthenticated,\n    authError,\n    user,\n    isAuthenticating\n  } = useMoralis();\n  const {\n    getNFTBalances,\n    data,\n    error,\n    isLoading,\n    isFetching\n  } = useNFTBalances();\n\n  const NFTBalances = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: JSON.stringify(error)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: verification,\n        className: \"lounge__buttons\",\n        alt: \"Verify-wallet\",\n        onClick: () => getNFTBalances({\n          params: {\n            token_address: \"0x495f947276749Ce646f68AC8c248420045cb7b5e\"\n          }\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  };\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lounge\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: PinkConnect,\n        alt: \"Pink-receving-wallet\",\n        className: \"pink-connect\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), isAuthenticating && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"meta\",\n        children: /*#__PURE__*/_jsxDEV(Meta, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Connect,\n        className: \"lounge__buttons\",\n        alt: \"Connect-Wallet\",\n        onClick: () => {\n          authenticate({\n            signingMessage: \"You are at the right place! Welcome to the Space Bar Lounge! Verify your tokens\"\n          });\n          NFTBalances();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), authError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"access-failure\",\n        children: \"requested signature was not completed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (data !== null) {\n    if (data.total > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lounge\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"lounge__info\",\n          children: [\"\\uD83D\\uDC40 Welcome \", user.get(\"ethAddress\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"lounge__info\",\n            children: \"congrats, you are VIP\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: JSON.stringify(error)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Toke,\n          className: \"toke\",\n          onClick: () => getNFTBalances({\n            params: {\n              token_address: \"0x495f947276749Ce646f68AC8c248420045cb7b5e\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Disconnect,\n          className: \"lounge__buttons\",\n          alt: \"Logout-wallet\",\n          onClick: () => logout()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this);\n    }\n  } // This is the case where we have the user's address\n  // which means they've connected their wallet to our site!\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lounge\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: PinkVerify,\n      alt: \"Pink-verifying-wallet\",\n      className: \"pink-verify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://opensea.io/collection/pink-sauce\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Buy,\n        className: \"lounge__buttons\",\n        alt: \"Buy-Pink-Sauce-NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NFTBalances, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: Disconnect,\n      className: \"lounge__buttons\",\n      alt: \"signing-off\",\n      onClick: () => logout()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n} // const LogoutButton = () => {\n//   const { logout } = useMoralis();\n//   return (\n//     <img\n//       src={Disconnect}\n//       className=\"connect-bttn\"\n//       alt=\"signing-off\"\n//       onClick={() => logout()}\n//     />\n//   );\n// };\n// function Lounge() {\n//   const { authenticate, isAuthenticated, authError, isAuthenticating, user } =\n//     useMoralis({\n//       address: \"0xaF45AA8a156338Bb43bcD546775B2e938b5Be826\",\n//     });\n//   if (!isAuthenticated) {\n//     return (\n//       <div>\n//         {authError && (\n//           <p className=\"access-failure\">\n//             requested signature was not completed.\n//           </p>\n//         )}\n//         {isAuthenticating && <p className=\"access-failure\">loading</p>}\n//         <img\n//           src={Connect}\n//           className=\"connect-bttn\"\n//           alt=\"Connect-Wallet\"\n//           onClick={() =>\n//             authenticate({\n//               signingMessage:\n//                 \"You are at the right place! Welcome to the Space Bar Lounge! Verify your tokens\",\n//             })\n//           }\n//         />\n//         <div className=\"lounge\">\n//           <p className=\"lounge__info\">I am Lounge</p>\n//         </div>\n//       </div>\n//     );\n//   }\n//   return (\n//     <div>\n//       <LogoutButton />\n//       <h1>Welcome {user.get(\"ethAddress\")}, to the Space Bar Lounge!</h1>\n//     </div>\n//   );\n// }\n// const serverUrl = \"https://trkzv1wsjs3t.usemoralis.com:2053/server\";\n// const appId = \"HvJXM1kBE8FsYmf3I007HMj7pPXSfmtyKxbtUUyg\";\n// Moralis.start({ appId, serverUrl });\n// const query = new Moralis.Query(\"0xaF45AA8a156338Bb43bcD546775B2e938b5Be826\");\n// query\n//   .find(\"token_address\")\n//   .then(function (results) {\n//     // results contains a weight / rank in result.get('score')\n//     results.get(\"address\");\n//   })\n//   .catch(function (error) {\n//     // There was an error.\n//   });\n\n\n_s(Lounge, \"cxPY+dh1trGcVCacT4kXfuRDZzA=\", false, function () {\n  return [useMoralis, useNFTBalances];\n});\n\n_c = Lounge;\nexport default Lounge;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lounge\");","map":{"version":3,"sources":["/Users/henosisholdingsllc/Desktop/jbluerynft/src/components/Lounge/Lounge.js"],"names":["React","Connect","Disconnect","verification","Buy","Toke","PinkConnect","PinkVerify","useMoralis","useNFTBalances","Lounge","logout","authenticate","isAuthenticated","authError","user","isAuthenticating","getNFTBalances","data","error","isLoading","isFetching","NFTBalances","JSON","stringify","params","token_address","signingMessage","total","get"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../Lounge/Lounge.scss\";\nimport Connect from \"../../assets/images/connect-wallet.png\";\nimport Disconnect from \"../../assets/images/logout-wallet.png\";\nimport verification from \"../../assets/images/verify-wallet.png\";\nimport Buy from \"../../assets/images/buy-wallet.png\";\nimport Toke from \"../../assets/images/coin-verified-transparent.gif\";\nimport PinkConnect from \"../../assets/images/pink-connect-wallet.gif\";\nimport PinkVerify from \"../../assets/images/pink-verify-wallet.gif\";\nimport { ReactComponent as Meta } from \"../../assets/images/metamask.svg\";\nimport { useMoralis, useNFTBalances } from \"react-moralis\";\n\nfunction Lounge() {\n  const {\n    logout,\n    authenticate,\n    isAuthenticated,\n    authError,\n    user,\n    isAuthenticating,\n  } = useMoralis();\n  const { getNFTBalances, data, error, isLoading, isFetching } =\n    useNFTBalances();\n\n  const NFTBalances = () => {\n    return (\n      <div>\n        {error && <>{JSON.stringify(error)}</>}\n        <img\n          src={verification}\n          className=\"lounge__buttons\"\n          alt=\"Verify-wallet\"\n          onClick={() =>\n            getNFTBalances({\n              params: {\n                token_address: \"0x495f947276749Ce646f68AC8c248420045cb7b5e\",\n              },\n            })\n          }\n        />\n      </div>\n    );\n  };\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"lounge\">\n        <img\n          src={PinkConnect}\n          alt=\"Pink-receving-wallet\"\n          className=\"pink-connect\"\n        />\n        {isAuthenticating && (\n          <div className=\"meta\">\n            <Meta />\n          </div>\n        )}\n        <img\n          src={Connect}\n          className=\"lounge__buttons\"\n          alt=\"Connect-Wallet\"\n          onClick={() => {\n            authenticate({\n              signingMessage:\n                \"You are at the right place! Welcome to the Space Bar Lounge! Verify your tokens\",\n            });\n            NFTBalances();\n          }}\n        />\n        {authError && (\n          <p className=\"access-failure\">\n            requested signature was not completed.\n          </p>\n        )}\n      </div>\n    );\n  }\n\n  if (data !== null) {\n    if (data.total > 0) {\n      return (\n        <div className=\"lounge\">\n          <h1 className=\"lounge__info\">👀 Welcome {user.get(\"ethAddress\")}</h1>\n          <div>\n            <p className=\"lounge__info\">congrats, you are VIP</p>\n          </div>\n          {error && <>{JSON.stringify(error)}</>}\n          <img\n            src={Toke}\n            className=\"toke\"\n            onClick={() =>\n              getNFTBalances({\n                params: {\n                  token_address: \"0x495f947276749Ce646f68AC8c248420045cb7b5e\",\n                },\n              })\n            }\n          />\n          <img\n            src={Disconnect}\n            className=\"lounge__buttons\"\n            alt=\"Logout-wallet\"\n            onClick={() => logout()}\n          />\n        </div>\n      );\n    }\n  }\n\n  // This is the case where we have the user's address\n  // which means they've connected their wallet to our site!\n  return (\n    <div className=\"lounge\">\n      <img\n        src={PinkVerify}\n        alt=\"Pink-verifying-wallet\"\n        className=\"pink-verify\"\n      />\n      <a href=\"https://opensea.io/collection/pink-sauce\">\n        <img src={Buy} className=\"lounge__buttons\" alt=\"Buy-Pink-Sauce-NFT\" />\n      </a>\n      <NFTBalances />\n      <img\n        src={Disconnect}\n        className=\"lounge__buttons\"\n        alt=\"signing-off\"\n        onClick={() => logout()}\n      />\n    </div>\n  );\n}\n\n// const LogoutButton = () => {\n//   const { logout } = useMoralis();\n\n//   return (\n//     <img\n//       src={Disconnect}\n//       className=\"connect-bttn\"\n//       alt=\"signing-off\"\n//       onClick={() => logout()}\n//     />\n//   );\n// };\n\n// function Lounge() {\n//   const { authenticate, isAuthenticated, authError, isAuthenticating, user } =\n//     useMoralis({\n//       address: \"0xaF45AA8a156338Bb43bcD546775B2e938b5Be826\",\n//     });\n//   if (!isAuthenticated) {\n//     return (\n//       <div>\n//         {authError && (\n//           <p className=\"access-failure\">\n//             requested signature was not completed.\n//           </p>\n//         )}\n//         {isAuthenticating && <p className=\"access-failure\">loading</p>}\n//         <img\n//           src={Connect}\n//           className=\"connect-bttn\"\n//           alt=\"Connect-Wallet\"\n//           onClick={() =>\n//             authenticate({\n//               signingMessage:\n//                 \"You are at the right place! Welcome to the Space Bar Lounge! Verify your tokens\",\n//             })\n//           }\n//         />\n//         <div className=\"lounge\">\n//           <p className=\"lounge__info\">I am Lounge</p>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div>\n//       <LogoutButton />\n//       <h1>Welcome {user.get(\"ethAddress\")}, to the Space Bar Lounge!</h1>\n//     </div>\n//   );\n// }\n\n// const serverUrl = \"https://trkzv1wsjs3t.usemoralis.com:2053/server\";\n// const appId = \"HvJXM1kBE8FsYmf3I007HMj7pPXSfmtyKxbtUUyg\";\n// Moralis.start({ appId, serverUrl });\n\n// const query = new Moralis.Query(\"0xaF45AA8a156338Bb43bcD546775B2e938b5Be826\");\n// query\n//   .find(\"token_address\")\n//   .then(function (results) {\n//     // results contains a weight / rank in result.get('score')\n//     results.get(\"address\");\n//   })\n//   .catch(function (error) {\n//     // There was an error.\n//   });\n\nexport default Lounge;\n"]},"metadata":{},"sourceType":"module"}