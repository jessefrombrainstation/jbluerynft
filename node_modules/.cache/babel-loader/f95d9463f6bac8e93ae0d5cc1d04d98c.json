{"ast":null,"code":"var _jsxFileName = \"/Users/henosisholdingsllc/Desktop/jbluerynft/src/components/Lounge/Lounge.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../Lounge/Lounge.scss\";\nimport Connect from \"../../assets/images/connect-wallet.png\";\nimport Disconnect from \"../../assets/images/logout-wallet.png\";\nimport { useMoralis, useNFTBalances } from \"react-moralis\";\nimport { Moralis } from \"moralis\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Lounge() {\n  _s();\n\n  const {\n    logout,\n    authenticate,\n    isAuthenticated,\n    user,\n    isAuthenticating\n  } = useMoralis();\n  const {\n    getNFTBalances,\n    data,\n    error,\n    isLoading,\n    isFetching\n  } = useNFTBalances();\n\n  const NFTBalances = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [error && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: JSON.stringify(error)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getNFTBalances({\n          params: {\n            chain: \"ethereum\"\n          }\n        }),\n        children: \"Refetch NFTBalances\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(data, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  };\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lounge\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"lounge__info\",\n        children: \"Display My Page When I Own NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-hero\",\n        onClick: () => {\n          authenticate();\n          NFTBalances();\n        },\n        children: \"Connect your wallet\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this);\n  }\n\n  if (data !== null) {\n    if (data.total > 0) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lounge\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"lounge__info\",\n          children: [\"\\uD83D\\uDC40 Welcome \", user.get(\"username\")]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [error && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: JSON.stringify(error)\n          }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => getNFTBalances({\n              params: {\n                chain: \"ethereum\"\n              }\n            }),\n            children: \"Refetch NFTBalances\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n            children: JSON.stringify(data, null, 2)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => logout(),\n          disabled: isAuthenticating,\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    }\n  } // This is the case where we have the user's address\n  // which means they've connected their wallet to our site!\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"lounge\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"lounge__info\",\n      children: [\"\\uD83D\\uDC40 Welcome \", user.get(\"username\"), \" You Don't Have NFT\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => logout(),\n      disabled: isAuthenticating,\n      children: \"Logout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n} // const LogoutButton = () => {\n//   const { logout } = useMoralis();\n//   return (\n//     <img\n//       src={Disconnect}\n//       className=\"connect-bttn\"\n//       alt=\"signing-off\"\n//       onClick={() => logout()}\n//     />\n//   );\n// };\n// function Lounge() {\n//   const { authenticate, isAuthenticated, authError, isAuthenticating, user } =\n//     useMoralis({\n//       address: \"0xaF45AA8a156338Bb43bcD546775B2e938b5Be826\",\n//     });\n//   if (!isAuthenticated) {\n//     return (\n//       <div>\n//         {authError && (\n//           <p className=\"access-failure\">\n//             requested signature was not completed.\n//           </p>\n//         )}\n//         {isAuthenticating && <p className=\"access-failure\">loading</p>}\n//         <img\n//           src={Connect}\n//           className=\"connect-bttn\"\n//           alt=\"Connect-Wallet\"\n//           onClick={() =>\n//             authenticate({\n//               signingMessage:\n//                 \"You are at the right place! Welcome to the Space Bar Lounge! Verify your tokens\",\n//             })\n//           }\n//         />\n//         <div className=\"lounge\">\n//           <p className=\"lounge__info\">I am Lounge</p>\n//         </div>\n//       </div>\n//     );\n//   }\n//   return (\n//     <div>\n//       <LogoutButton />\n//       <h1>Welcome {user.get(\"ethAddress\")}, to the Space Bar Lounge!</h1>\n//     </div>\n//   );\n// }\n// const serverUrl = \"https://trkzv1wsjs3t.usemoralis.com:2053/server\";\n// const appId = \"HvJXM1kBE8FsYmf3I007HMj7pPXSfmtyKxbtUUyg\";\n// Moralis.start({ appId, serverUrl });\n// const query = new Moralis.Query(\"0xaF45AA8a156338Bb43bcD546775B2e938b5Be826\");\n// query\n//   .find(\"token_address\")\n//   .then(function (results) {\n//     // results contains a weight / rank in result.get('score')\n//     results.get(\"address\");\n//   })\n//   .catch(function (error) {\n//     // There was an error.\n//   });\n\n\n_s(Lounge, \"gnyT9MxexaYcbcEAwMtzK1WQ5bA=\", false, function () {\n  return [useMoralis, useNFTBalances];\n});\n\n_c = Lounge;\nexport default Lounge;\n\nvar _c;\n\n$RefreshReg$(_c, \"Lounge\");","map":{"version":3,"sources":["/Users/henosisholdingsllc/Desktop/jbluerynft/src/components/Lounge/Lounge.js"],"names":["React","Connect","Disconnect","useMoralis","useNFTBalances","Moralis","Lounge","logout","authenticate","isAuthenticated","user","isAuthenticating","getNFTBalances","data","error","isLoading","isFetching","NFTBalances","JSON","stringify","params","chain","total","get"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"../Lounge/Lounge.scss\";\nimport Connect from \"../../assets/images/connect-wallet.png\";\nimport Disconnect from \"../../assets/images/logout-wallet.png\";\nimport { useMoralis, useNFTBalances } from \"react-moralis\";\nimport { Moralis } from \"moralis\";\n\nfunction Lounge() {\n  const { logout, authenticate, isAuthenticated, user, isAuthenticating } =\n    useMoralis();\n  const { getNFTBalances, data, error, isLoading, isFetching } =\n    useNFTBalances();\n\n  const NFTBalances = () => {\n    return (\n      <div>\n        {error && <>{JSON.stringify(error)}</>}\n        <button\n          onClick={() => getNFTBalances({ params: { chain: \"ethereum\" } })}\n        >\n          Refetch NFTBalances\n        </button>\n        <pre>{JSON.stringify(data, null, 2)}</pre>\n      </div>\n    );\n  };\n\n  if (!isAuthenticated) {\n    return (\n      <div className=\"lounge\">\n        <h1 className=\"lounge__info\">Display My Page When I Own NFT</h1>\n        <button\n          className=\"btn-hero\"\n          onClick={() => {\n            authenticate();\n            NFTBalances();\n          }}\n        >\n          Connect your wallet\n        </button>\n      </div>\n    );\n  }\n\n  if (data !== null) {\n    if (data.total > 0) {\n      return (\n        <div className=\"lounge\">\n          <h1 className=\"lounge__info\">👀 Welcome {user.get(\"username\")}</h1>\n          <div>\n            {error && <>{JSON.stringify(error)}</>}\n            <button\n              onClick={() => getNFTBalances({ params: { chain: \"ethereum\" } })}\n            >\n              Refetch NFTBalances\n            </button>\n            <pre>{JSON.stringify(data, null, 2)}</pre>\n          </div>\n          <button onClick={() => logout()} disabled={isAuthenticating}>\n            Logout\n          </button>\n        </div>\n      );\n    }\n  }\n\n  // This is the case where we have the user's address\n  // which means they've connected their wallet to our site!\n  return (\n    <div className=\"lounge\">\n      <h1 className=\"lounge__info\">\n        👀 Welcome {user.get(\"username\")} You Don't Have NFT\n      </h1>\n      <button onClick={() => logout()} disabled={isAuthenticating}>\n        Logout\n      </button>\n    </div>\n  );\n}\n\n// const LogoutButton = () => {\n//   const { logout } = useMoralis();\n\n//   return (\n//     <img\n//       src={Disconnect}\n//       className=\"connect-bttn\"\n//       alt=\"signing-off\"\n//       onClick={() => logout()}\n//     />\n//   );\n// };\n\n// function Lounge() {\n//   const { authenticate, isAuthenticated, authError, isAuthenticating, user } =\n//     useMoralis({\n//       address: \"0xaF45AA8a156338Bb43bcD546775B2e938b5Be826\",\n//     });\n//   if (!isAuthenticated) {\n//     return (\n//       <div>\n//         {authError && (\n//           <p className=\"access-failure\">\n//             requested signature was not completed.\n//           </p>\n//         )}\n//         {isAuthenticating && <p className=\"access-failure\">loading</p>}\n//         <img\n//           src={Connect}\n//           className=\"connect-bttn\"\n//           alt=\"Connect-Wallet\"\n//           onClick={() =>\n//             authenticate({\n//               signingMessage:\n//                 \"You are at the right place! Welcome to the Space Bar Lounge! Verify your tokens\",\n//             })\n//           }\n//         />\n//         <div className=\"lounge\">\n//           <p className=\"lounge__info\">I am Lounge</p>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div>\n//       <LogoutButton />\n//       <h1>Welcome {user.get(\"ethAddress\")}, to the Space Bar Lounge!</h1>\n//     </div>\n//   );\n// }\n\n// const serverUrl = \"https://trkzv1wsjs3t.usemoralis.com:2053/server\";\n// const appId = \"HvJXM1kBE8FsYmf3I007HMj7pPXSfmtyKxbtUUyg\";\n// Moralis.start({ appId, serverUrl });\n\n// const query = new Moralis.Query(\"0xaF45AA8a156338Bb43bcD546775B2e938b5Be826\");\n// query\n//   .find(\"token_address\")\n//   .then(function (results) {\n//     // results contains a weight / rank in result.get('score')\n//     results.get(\"address\");\n//   })\n//   .catch(function (error) {\n//     // There was an error.\n//   });\n\nexport default Lounge;\n"]},"metadata":{},"sourceType":"module"}