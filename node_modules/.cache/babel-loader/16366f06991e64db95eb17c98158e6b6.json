{"ast":null,"code":"import React, { Component } from \"react\";\nimport Eths from \"../../assets/images/eth.png\";\nimport \"../Eth/Eth.scss\";\n\nconst axios = require(\"axios\");\n\nclass Eth extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.getData = () => {\n      axios({\n        method: \"GET\",\n        url: \"https://coinpaprika1.p.rapidapi.com/tickers\",\n        headers: {\n          \"content-type\": \"application/octet-stream\",\n          \"x-rapidapi-host\": \"coinpaprika1.p.rapidapi.com\",\n          \"x-rapidapi-key\": \"Y33c837417fmshe7d83ed6ba3bc38p1f39d1jsn4ad1232f41b0\",\n          iseQueryString: true\n        }\n      }).then(response => {\n        const coins = response.data;\n        const ccArray = [{\n          name: `Ethereum`,\n          img: Eths\n        }];\n\n        for (let j = 0; j < ccArray.length; j++) {\n          for (let i = 0; i < coins.length; i++) {\n            if (coins[i].name === ccArray[j].name) {\n              this.setState({\n                ccData: [...this.state.ccData, coins[i]]\n              });\n            }\n          }\n        }\n\n        this.setState({\n          ccData: this.state.ccData.sort((a, b) => a.rank - b.rank)\n        });\n      }).catch(error => {\n        console.log(error);\n      });\n    };\n  }\n\n  async componentWillMount() {\n    await this.getData();\n  }\n\n}","map":{"version":3,"sources":["/Users/henosisholdingsllc/Desktop/jbluerynft/client/src/components/Eth/Eth.js"],"names":["React","Component","Eths","axios","require","Eth","getData","method","url","headers","iseQueryString","then","response","coins","data","ccArray","name","img","j","length","i","setState","ccData","state","sort","a","b","rank","catch","error","console","log","componentWillMount"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AACA,OAAO,iBAAP;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;;AAAA,SAI1BK,OAJ0B,GAIhB,MAAM;AACdH,MAAAA,KAAK,CAAC;AACJI,QAAAA,MAAM,EAAE,KADJ;AAEJC,QAAAA,GAAG,EAAE,6CAFD;AAGJC,QAAAA,OAAO,EAAE;AACP,0BAAgB,0BADT;AAEP,6BAAmB,6BAFZ;AAGP,4BAAkB,qDAHX;AAIPC,UAAAA,cAAc,EAAE;AAJT;AAHL,OAAD,CAAL,CAUGC,IAVH,CAUSC,QAAD,IAAc;AAClB,cAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAvB;AACA,cAAMC,OAAO,GAAG,CAAC;AAAEC,UAAAA,IAAI,EAAG,UAAT;AAAoBC,UAAAA,GAAG,EAAEf;AAAzB,SAAD,CAAhB;;AACA,aAAK,IAAIgB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACvC,eAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,KAAK,CAACM,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AACrC,gBAAIP,KAAK,CAACO,CAAD,CAAL,CAASJ,IAAT,KAAkBD,OAAO,CAACG,CAAD,CAAP,CAAWF,IAAjC,EAAuC;AACrC,mBAAKK,QAAL,CAAc;AACZC,gBAAAA,MAAM,EAAE,CAAC,GAAG,KAAKC,KAAL,CAAWD,MAAf,EAAuBT,KAAK,CAACO,CAAD,CAA5B;AADI,eAAd;AAGD;AACF;AACF;;AACD,aAAKC,QAAL,CAAc;AACZC,UAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWD,MAAX,CAAkBE,IAAlB,CAAuB,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,CAACE,IAAF,GAASD,CAAC,CAACC,IAA5C;AADI,SAAd;AAGD,OAzBH,EA0BGC,KA1BH,CA0BUC,KAAD,IAAW;AAChBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OA5BH;AA6BD,KAlCyB;AAAA;;AACF,QAAlBG,kBAAkB,GAAG;AACzB,UAAM,KAAK1B,OAAL,EAAN;AACD;;AAHyB","sourcesContent":["import React, { Component } from \"react\";\nimport Eths from \"../../assets/images/eth.png\";\nimport \"../Eth/Eth.scss\";\n\nconst axios = require(\"axios\");\n\nclass Eth extends Component {\n  async componentWillMount() {\n    await this.getData();\n  }\n  getData = () => {\n    axios({\n      method: \"GET\",\n      url: \"https://coinpaprika1.p.rapidapi.com/tickers\",\n      headers: {\n        \"content-type\": \"application/octet-stream\",\n        \"x-rapidapi-host\": \"coinpaprika1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"Y33c837417fmshe7d83ed6ba3bc38p1f39d1jsn4ad1232f41b0\",\n        iseQueryString: true,\n      },\n    })\n      .then((response) => {\n        const coins = response.data;\n        const ccArray = [{ name: `Ethereum`, img: Eths }];\n        for (let j = 0; j < ccArray.length; j++) {\n          for (let i = 0; i < coins.length; i++) {\n            if (coins[i].name === ccArray[j].name) {\n              this.setState({\n                ccData: [...this.state.ccData, coins[i]],\n              });\n            }\n          }\n        }\n        this.setState({\n          ccData: this.state.ccData.sort((a, b) => a.rank - b.rank),\n        });\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n}\n"]},"metadata":{},"sourceType":"module"}