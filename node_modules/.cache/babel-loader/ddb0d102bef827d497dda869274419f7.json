{"ast":null,"code":"var _jsxFileName = \"/Users/henosisholdingsllc/Desktop/jbluerynft/src/components/Lounge/Lounge.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport \"../Lounge/Lounge.scss\";\nimport Connect from \"../../assets/images/connect-wallet.png\";\nimport Disconnect from \"../../assets/images/logout-wallet.png\";\nimport { useMoralis } from \"react-moralis\";\nimport { useEffect } from \"react\";\nimport { Moralis } from \"moralis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LogoutButton = () => {\n  _s();\n\n  const {\n    logout\n  } = useMoralis();\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    src: Disconnect,\n    className: \"connect-bttn\",\n    alt: \"signing-off\",\n    onClick: () => logout()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_s(LogoutButton, \"5na9gecmmIEhOeFkNBUXEEzPRSM=\", false, function () {\n  return [useMoralis];\n});\n\n_c = LogoutButton;\n\nfunction Lounge() {\n  _s2();\n\n  const {\n    authenticate,\n    isAuthenticated,\n    authError,\n    isAuthenticating,\n    user\n  } = useMoralis();\n\n  if (!isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [authError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"access-failure\",\n        children: \"requested signature was not completed.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), isAuthenticating && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"access-failure\",\n        children: \"loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: Connect,\n        className: \"connect-bttn\",\n        alt: \"Connect-Wallet\",\n        onClick: () => authenticate({\n          signingMessage: \"You are at the right place! Welcome to the Space Bar Lounge! Verify your tokens\"\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lounge\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"lounge__info\",\n          children: \"I am Lounge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [useEffect(() => {\n      if (isAuthenticated) {\n        const options = {\n          address: \"0xaF45AA8a156338Bb43bcD546775B2e938b5Be826\",\n          chain: \"eth\"\n        };\n        const nftOwners = Moralis.Web3API.token.getNFTOwners(options);\n      }\n    }), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Welcome \", user.get(\"username\"), \", to the Space Bar Lounge!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Lounge, \"bgZI7ieJOJZiUTHj9nkwddDpKkk=\", false, function () {\n  return [useMoralis];\n});\n\n_c2 = Lounge;\nexport default Lounge;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LogoutButton\");\n$RefreshReg$(_c2, \"Lounge\");","map":{"version":3,"sources":["/Users/henosisholdingsllc/Desktop/jbluerynft/src/components/Lounge/Lounge.js"],"names":["React","Connect","Disconnect","useMoralis","useEffect","Moralis","LogoutButton","logout","Lounge","authenticate","isAuthenticated","authError","isAuthenticating","user","signingMessage","options","address","chain","nftOwners","Web3API","token","getNFTOwners","get"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,uBAAP;AACA,OAAOC,OAAP,MAAoB,wCAApB;AACA,OAAOC,UAAP,MAAuB,uCAAvB;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,SAAxB;;;AAEA,MAAMC,YAAY,GAAG,MAAM;AAAA;;AACzB,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,UAAU,EAA7B;AAEA,sBACE;AACE,IAAA,GAAG,EAAED,UADP;AAEE,IAAA,SAAS,EAAC,cAFZ;AAGE,IAAA,GAAG,EAAC,aAHN;AAIE,IAAA,OAAO,EAAE,MAAMK,MAAM;AAJvB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAXD;;GAAMD,Y;UACeH,U;;;KADfG,Y;;AAaN,SAASE,MAAT,GAAkB;AAAA;;AAChB,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,eAAhB;AAAiCC,IAAAA,SAAjC;AAA4CC,IAAAA,gBAA5C;AAA8DC,IAAAA;AAA9D,MACJV,UAAU,EADZ;;AAGA,MAAI,CAACO,eAAL,EAAsB;AACpB,wBACE;AAAA,iBACGC,SAAS,iBACR;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,EAMGC,gBAAgB,iBAAI;AAAG,QAAA,SAAS,EAAC,gBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANvB,eAOE;AACE,QAAA,GAAG,EAAEX,OADP;AAEE,QAAA,SAAS,EAAC,cAFZ;AAGE,QAAA,GAAG,EAAC,gBAHN;AAIE,QAAA,OAAO,EAAE,MACPQ,YAAY,CAAC;AACXK,UAAAA,cAAc,EACZ;AAFS,SAAD;AALhB;AAAA;AAAA;AAAA;AAAA,cAPF,eAkBE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwBD;;AAED,sBACE;AAAA,eACGV,SAAS,CAAC,MAAM;AACf,UAAIM,eAAJ,EAAqB;AACnB,cAAMK,OAAO,GAAG;AACdC,UAAAA,OAAO,EAAE,4CADK;AAEdC,UAAAA,KAAK,EAAE;AAFO,SAAhB;AAIA,cAAMC,SAAS,GAAGb,OAAO,CAACc,OAAR,CAAgBC,KAAhB,CAAsBC,YAAtB,CAAmCN,OAAnC,CAAlB;AACD;AACF,KARS,CADZ,eAUE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAVF,eAWE;AAAA,6BAAaF,IAAI,CAACS,GAAL,CAAS,UAAT,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;IA9CQd,M;UAELL,U;;;MAFKK,M;AAgDT,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport \"../Lounge/Lounge.scss\";\nimport Connect from \"../../assets/images/connect-wallet.png\";\nimport Disconnect from \"../../assets/images/logout-wallet.png\";\nimport { useMoralis } from \"react-moralis\";\nimport { useEffect } from \"react\";\nimport { Moralis } from \"moralis\";\n\nconst LogoutButton = () => {\n  const { logout } = useMoralis();\n\n  return (\n    <img\n      src={Disconnect}\n      className=\"connect-bttn\"\n      alt=\"signing-off\"\n      onClick={() => logout()}\n    />\n  );\n};\n\nfunction Lounge() {\n  const { authenticate, isAuthenticated, authError, isAuthenticating, user } =\n    useMoralis();\n\n  if (!isAuthenticated) {\n    return (\n      <div>\n        {authError && (\n          <p className=\"access-failure\">\n            requested signature was not completed.\n          </p>\n        )}\n        {isAuthenticating && <p className=\"access-failure\">loading</p>}\n        <img\n          src={Connect}\n          className=\"connect-bttn\"\n          alt=\"Connect-Wallet\"\n          onClick={() =>\n            authenticate({\n              signingMessage:\n                \"You are at the right place! Welcome to the Space Bar Lounge! Verify your tokens\",\n            })\n          }\n        />\n        <div className=\"lounge\">\n          <p className=\"lounge__info\">I am Lounge</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {useEffect(() => {\n        if (isAuthenticated) {\n          const options = {\n            address: \"0xaF45AA8a156338Bb43bcD546775B2e938b5Be826\",\n            chain: \"eth\",\n          };\n          const nftOwners = Moralis.Web3API.token.getNFTOwners(options);\n        }\n      })}\n      <LogoutButton />\n      <h1>Welcome {user.get(\"username\")}, to the Space Bar Lounge!</h1>\n    </div>\n  );\n}\n\nexport default Lounge;\n"]},"metadata":{},"sourceType":"module"}